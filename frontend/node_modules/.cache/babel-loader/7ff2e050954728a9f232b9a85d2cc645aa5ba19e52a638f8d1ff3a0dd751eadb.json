{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohit\\\\CYOA_python\\\\frontend\\\\src\\\\components\\\\AdventureGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport Button from './ui/button';\nimport { Alert, AlertDescription } from './ui/alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdventureGame = () => {\n  _s();\n  const [gameState, setGameState] = useState('start');\n  const [stateData, setStateData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [gameHistory, setGameHistory] = useState([]);\n  const [showHistory, setShowHistory] = useState(false);\n  const fetchState = async state => {\n    try {\n      setLoading(true);\n      const response = await fetch(`http://localhost:5000/api/game/state?state=${state}`);\n      const data = await response.json();\n      setStateData(data.stateData);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch game state');\n      setLoading(false);\n    }\n  };\n  const makeChoice = async choice => {\n    try {\n      setLoading(true);\n      const response = await fetch('http://localhost:5000/api/game/choice', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          state: gameState,\n          choice\n        })\n      });\n      const data = await response.json();\n\n      // Add current state to history\n      setGameHistory(prev => [...prev, {\n        state: gameState,\n        text: stateData.text,\n        choice: stateData.choices[choice].text\n      }]);\n      setGameState(data.state);\n      setStateData(data.stateData);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to process choice');\n      setLoading(false);\n    }\n  };\n  const restartGame = () => {\n    setGameState('start');\n    setGameHistory([]);\n    fetchState('start');\n  };\n  useEffect(() => {\n    fetchState(gameState);\n  }, [gameState]);\n  const getOutcomeEmoji = outcome => {\n    switch (outcome) {\n      case 'win':\n        return '🎉';\n      case 'lose':\n        return '💀';\n      default:\n        return '📜';\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl\",\n        children: \"Loading your adventure...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"destructive\",\n      className: \"max-w-lg mx-auto mt-8\",\n      children: /*#__PURE__*/_jsxDEV(AlertDescription, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-lg mx-auto mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          children: stateData.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [Object.keys(stateData.choices).map(choiceKey => /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => makeChoice(choiceKey),\n          children: stateData.choices[choiceKey].text\n        }, choiceKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)), stateData.is_ending && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: getOutcomeEmoji(stateData.outcome)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: restartGame,\n            children: \"Restart Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), showHistory && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: gameHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: entry.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), \": \", entry.text, \" (Choice: \", entry.choice, \")\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setShowHistory(!showHistory),\n      children: showHistory ? 'Hide History' : 'Show History'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(AdventureGame, \"kTJogGDhJ8CDpwoUukJn5F7SJbc=\");\n_c = AdventureGame;\nexport default AdventureGame;\nvar _c;\n$RefreshReg$(_c, \"AdventureGame\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","CardHeader","CardTitle","Button","Alert","AlertDescription","jsxDEV","_jsxDEV","AdventureGame","_s","gameState","setGameState","stateData","setStateData","loading","setLoading","error","setError","gameHistory","setGameHistory","showHistory","setShowHistory","fetchState","state","response","fetch","data","json","err","makeChoice","choice","method","headers","body","JSON","stringify","prev","text","choices","restartGame","getOutcomeEmoji","outcome","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","Object","keys","map","choiceKey","onClick","is_ending","entry","index","_c","$RefreshReg$"],"sources":["C:/Users/mohit/CYOA_python/frontend/src/components/AdventureGame.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\r\nimport Button from './ui/button';\r\nimport { Alert, AlertDescription } from './ui/alert';\r\n\r\nconst AdventureGame = () => {\r\n  const [gameState, setGameState] = useState('start');\r\n  const [stateData, setStateData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [gameHistory, setGameHistory] = useState([]);\r\n  const [showHistory, setShowHistory] = useState(false);\r\n\r\n  const fetchState = async (state) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(`http://localhost:5000/api/game/state?state=${state}`);\r\n      const data = await response.json();\r\n      setStateData(data.stateData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Failed to fetch game state');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const makeChoice = async (choice) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('http://localhost:5000/api/game/choice', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ state: gameState, choice }),\r\n      });\r\n      const data = await response.json();\r\n      \r\n      // Add current state to history\r\n      setGameHistory(prev => [...prev, {\r\n        state: gameState,\r\n        text: stateData.text,\r\n        choice: stateData.choices[choice].text\r\n      }]);\r\n      \r\n      setGameState(data.state);\r\n      setStateData(data.stateData);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Failed to process choice');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const restartGame = () => {\r\n    setGameState('start');\r\n    setGameHistory([]);\r\n    fetchState('start');\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchState(gameState);\r\n  }, [gameState]);\r\n\r\n  const getOutcomeEmoji = (outcome) => {\r\n    switch (outcome) {\r\n      case 'win':\r\n        return '🎉';\r\n      case 'lose':\r\n        return '💀';\r\n      default:\r\n        return '📜';\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-screen\">\r\n        <div className=\"text-xl\">Loading your adventure...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert variant=\"destructive\" className=\"max-w-lg mx-auto mt-8\">\r\n        <AlertDescription>{error}</AlertDescription>\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-lg mx-auto mt-8\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>{stateData.text}</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {Object.keys(stateData.choices).map((choiceKey) => (\r\n            <Button key={choiceKey} onClick={() => makeChoice(choiceKey)}>\r\n              {stateData.choices[choiceKey].text}\r\n            </Button>\r\n          ))}\r\n          {stateData.is_ending && (\r\n            <div className=\"mt-4\">\r\n              <span>{getOutcomeEmoji(stateData.outcome)}</span>\r\n              <Button onClick={restartGame}>Restart Game</Button>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n      {showHistory && (\r\n        <div className=\"history\">\r\n          <h2>Game History</h2>\r\n          <ul>\r\n            {gameHistory.map((entry, index) => (\r\n              <li key={index}>\r\n                <strong>{entry.state}</strong>: {entry.text} (Choice: {entry.choice})\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n      <Button onClick={() => setShowHistory(!showHistory)}>\r\n        {showHistory ? 'Hide History' : 'Show History'}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdventureGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}